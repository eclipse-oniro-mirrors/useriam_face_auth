# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/useriam/face_auth/face_auth.gni")
import("//build/ohos.gni")

config("faceauthservice_ex_config") {
  include_dirs = [ "inc" ]
}

ohos_source_set("faceauthservice_ex_source_set") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  sources = [
    "src/finite_state_machine_builder.cpp",
    "src/finite_state_machine_impl.cpp",
    "src/screen_brightness_task.cpp",
    "src/thread_handler_impl.cpp",
  ]
  include_dirs = [
    "inc",
    "../services/inc",
    "../common/inc",
    "../common/logs",
    "../common/utils",
  ]

  public_configs = [ ":faceauthservice_ex_config" ]

  deps = [ "../services:faceauthservice" ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_camera:libbuffer_producer_sequenceable_1.0",
    "drivers_interface_face_auth:libface_auth_proxy_2.0",
    "hilog:libhilog",
    "init:libbegetutil",
    "user_auth_framework:userauth_executors",
  ]

  defines = []

  if (face_use_display_manager_component) {
    external_deps += [ "display_manager:displaymgr" ]
    defines += [ "FACE_USE_DISPLAY_MANAGER_COMPONENT" ]
  }

  if (face_use_power_manager_component) {
    external_deps += [ "power_manager:powermgr_client" ]
  }

  if (defined(face_use_sensor_component)) {
    external_deps += [ "sensor:sensor_interface_native" ]
    defines += [ "FACE_USE_SENSOR_COMPONENT" ]
  }

  if (defined(global_parts_info.graphic_graphic_2d)) {
    external_deps += [ "graphic_surface:surface" ]
  }

  remove_configs = [ "//build/config/compiler:no_exceptions" ]

  subsystem_name = "useriam"
  part_name = "face_auth"
}

ohos_shared_library("faceauthservice_ex") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  deps = [ ":faceauthservice_ex_source_set" ]

  external_deps = [ "hilog:libhilog" ]

  if (use_musl) {
    version_script = "face_auth_service_ex_map"
  }

  subsystem_name = "useriam"
  part_name = "face_auth"
}
