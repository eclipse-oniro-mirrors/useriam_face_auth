# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/aafwk/standard/feature.gni")

group("faceauthservice_group") {
  deps = []
  if (ability_runtime_graphics) {
    deps += [ ":faceauthservice" ]
  }
}

ohos_shared_library("faceauthservice") {
  include_dirs = [
    "//base/user_iam/face_auth/services/faceauth/include",
    "//base/user_iam/face_auth/common/include",
    "//base/user_iam/face_auth/services/ca_mock/include",
    "//base/user_iam/face_auth/interfaces/innerkits/faceauth/include",
    "//foundation/multimedia/camera_standard/interfaces/inner_api/native/camera/include",
    "//foundation/multimedia/camera_standard/interfaces/innerkits/native/camera/include",
    "//foundation/multimedia/camera_standard/frameworks/native/metadata/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/base/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/client/include",
    "//foundation/multimedia/camera_standard/services/camera_service/binder/server/include",
  ]

  sources = [
    "//base/user_iam/face_auth/common/src/return_callback.cpp",
    "//base/user_iam/face_auth/services/ca_mock/src/adaptor_algorithm.cpp",
    "//base/user_iam/face_auth/services/ca_mock/src/buffer.cpp",
    "//base/user_iam/face_auth/services/ca_mock/src/face_auth_ca.cpp",
    "//base/user_iam/face_auth/services/ca_mock/src/face_auth_func.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_camera.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_camera_buffer_listener.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_event.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_event_handler.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_executor_callback.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_get_info_callback.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_manager.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_query_callback.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_req.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_service.cpp",
    "//base/user_iam/face_auth/services/faceauth/src/face_auth_thread_pool.cpp",
  ]

  deps = [
    "//base/user_iam/face_auth/interfaces/innerkits/faceauth:faceauth_framework",
    "//foundation/multimedia/camera_standard/frameworks/native/camera:camera_framework",
    "//foundation/multimedia/camera_standard/frameworks/native/metadata:metadata",
    "//third_party/openssl:libcrypto_static",
  ]
  external_deps = [
    "user_auth:coauth_framework",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "startup_l2:syspara_watchagent",
    "user_idm:useridm_framework",
    "utils_base:utils",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "graphic_standard:surface" ]
  }
  subsystem_name = "useriam"
  part_name = "face_auth"
}
