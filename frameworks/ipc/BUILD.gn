# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

config("faceauth_framework_public_config") {
  include_dirs = [ "inc" ]
}

ohos_shared_library("faceauth_framework") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  sources = [
    "src/face_auth_client_impl.cpp",
    "src/face_auth_proxy.cpp",
  ]

  public_configs = [ ":faceauth_framework_public_config" ]

  configs = [ "../../common:iam_log_config" ]

  include_dirs = [
    "../../common/utils",
    "../../common/inc",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libtoken_setproc",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  if (use_musl) {
    version_script = "face_auth_framework_map"
  }

  if (defined(global_parts_info.graphic_graphic_2d)) {
    external_deps += [ "graphic_surface:surface" ]
  }

  subsystem_name = "useriam"
  innerapi_tags = [ "platformsdk" ]
  part_name = "face_auth"
}

ohos_source_set("faceauth_framework_stub") {
  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    blocklist = "../../cfi_blocklist.txt"
  }
  branch_protector_ret = "pac_ret"
  sources = [ "src/face_auth_stub.cpp" ]

  configs = [ "../../common:iam_log_config" ]

  public_configs = [ ":faceauth_framework_public_config" ]

  include_dirs = [
    "../../common/utils",
    "../../common/inc",
  ]

  external_deps = [
    "hilog:libhilog",
    "ipc:ipc_single",
  ]

  if (defined(global_parts_info.graphic_graphic_2d)) {
    external_deps += [ "graphic_surface:surface" ]
  }

  subsystem_name = "useriam"
  part_name = "face_auth"
}
